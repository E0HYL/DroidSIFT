class com.hp.hpl.sparta.CharCircBuffer extends java.lang.Object
{
    private final int[] buf_;
    private boolean enabled_;
    private int next_;
    private int total_;

    void <init>(int)
    {
        com.hp.hpl.sparta.CharCircBuffer r0;
        int i0;
        int[] $r1;

        r0 := @this: com.hp.hpl.sparta.CharCircBuffer;
        i0 := @parameter0: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<com.hp.hpl.sparta.CharCircBuffer: int next_> = 0;
        r0.<com.hp.hpl.sparta.CharCircBuffer: int total_> = 0;
        r0.<com.hp.hpl.sparta.CharCircBuffer: boolean enabled_> = 1;
        $r1 = newarray (int)[i0];
        r0.<com.hp.hpl.sparta.CharCircBuffer: int[] buf_> = $r1;
        return;
    }

    private void addRaw(int)
    {
        com.hp.hpl.sparta.CharCircBuffer r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;
        int[] $r1, $r2;

        r0 := @this: com.hp.hpl.sparta.CharCircBuffer;
        i0 := @parameter0: int;
        $z0 = r0.<com.hp.hpl.sparta.CharCircBuffer: boolean enabled_>;
        if $z0 == 0 goto label0;

        $r1 = r0.<com.hp.hpl.sparta.CharCircBuffer: int[] buf_>;
        $i1 = r0.<com.hp.hpl.sparta.CharCircBuffer: int next_>;
        $r1[$i1] = i0;
        $i2 = r0.<com.hp.hpl.sparta.CharCircBuffer: int next_>;
        $i3 = 1 + $i2;
        $r2 = r0.<com.hp.hpl.sparta.CharCircBuffer: int[] buf_>;
        $i4 = lengthof $r2;
        $i5 = $i3 % $i4;
        r0.<com.hp.hpl.sparta.CharCircBuffer: int next_> = $i5;
        $i6 = r0.<com.hp.hpl.sparta.CharCircBuffer: int total_>;
        $i7 = 1 + $i6;
        r0.<com.hp.hpl.sparta.CharCircBuffer: int total_> = $i7;

     label0:
        return;
    }

    void addChar(char)
    {
        com.hp.hpl.sparta.CharCircBuffer r0;
        char c0;

        r0 := @this: com.hp.hpl.sparta.CharCircBuffer;
        c0 := @parameter0: char;
        specialinvoke r0.<com.hp.hpl.sparta.CharCircBuffer: void addRaw(int)>(c0);
        return;
    }

    void addInt(int)
    {
        com.hp.hpl.sparta.CharCircBuffer r0;
        int i0, $i1;

        r0 := @this: com.hp.hpl.sparta.CharCircBuffer;
        i0 := @parameter0: int;
        $i1 = 65536 + i0;
        specialinvoke r0.<com.hp.hpl.sparta.CharCircBuffer: void addRaw(int)>($i1);
        return;
    }

    void addString(java.lang.String)
    {
        com.hp.hpl.sparta.CharCircBuffer r0;
        java.lang.String r1;
        int i0, i1;
        char[] r2;
        char $c2;

        r0 := @this: com.hp.hpl.sparta.CharCircBuffer;
        r1 := @parameter0: java.lang.String;
        r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();
        i0 = lengthof r2;
        i1 = 0;

     label0:
        if i1 < i0 goto label1;

        return;

     label1:
        $c2 = r2[i1];
        virtualinvoke r0.<com.hp.hpl.sparta.CharCircBuffer: void addChar(char)>($c2);
        i1 = i1 + 1;
        goto label0;
    }

    void disable()
    {
        com.hp.hpl.sparta.CharCircBuffer r0;

        r0 := @this: com.hp.hpl.sparta.CharCircBuffer;
        r0.<com.hp.hpl.sparta.CharCircBuffer: boolean enabled_> = 0;
        return;
    }

    void enable()
    {
        com.hp.hpl.sparta.CharCircBuffer r0;

        r0 := @this: com.hp.hpl.sparta.CharCircBuffer;
        r0.<com.hp.hpl.sparta.CharCircBuffer: boolean enabled_> = 1;
        return;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.sparta.CharCircBuffer r0;
        java.lang.StringBuffer r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15;
        int[] $r2, $r3, $r4, $r5, $r7, $r8;
        java.lang.String $r6, $r10;
        char $c14;

        r0 := @this: com.hp.hpl.sparta.CharCircBuffer;
        r1 = new java.lang.StringBuffer;
        $r2 = r0.<com.hp.hpl.sparta.CharCircBuffer: int[] buf_>;
        $i2 = lengthof $r2;
        $i3 = 11 * $i2;
        $i4 = $i3 / 10;
        specialinvoke r1.<java.lang.StringBuffer: void <init>(int)>($i4);
        $i5 = r0.<com.hp.hpl.sparta.CharCircBuffer: int total_>;
        $r3 = r0.<com.hp.hpl.sparta.CharCircBuffer: int[] buf_>;
        $i6 = lengthof $r3;
        if $i5 >= $i6 goto label1;

        $r4 = r0.<com.hp.hpl.sparta.CharCircBuffer: int[] buf_>;
        $i7 = lengthof $r4;
        $i8 = r0.<com.hp.hpl.sparta.CharCircBuffer: int total_>;
        i0 = $i7 - $i8;

     label0:
        $r5 = r0.<com.hp.hpl.sparta.CharCircBuffer: int[] buf_>;
        $i9 = lengthof $r5;
        if i0 < $i9 goto label2;

        $r6 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r6;

     label1:
        i0 = 0;
        goto label0;

     label2:
        $r7 = r0.<com.hp.hpl.sparta.CharCircBuffer: int[] buf_>;
        $i10 = r0.<com.hp.hpl.sparta.CharCircBuffer: int next_>;
        $i11 = i0 + $i10;
        $r8 = r0.<com.hp.hpl.sparta.CharCircBuffer: int[] buf_>;
        $i12 = lengthof $r8;
        $i13 = $i11 % $i12;
        i1 = $r7[$i13];
        if i1 >= 65536 goto label4;

        $c14 = (char) i1;
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c14);

     label3:
        i0 = i0 + 1;
        goto label0;

     label4:
        $i15 = i1 - 65536;
        $r10 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i15);
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);
        goto label3;
    }
}
