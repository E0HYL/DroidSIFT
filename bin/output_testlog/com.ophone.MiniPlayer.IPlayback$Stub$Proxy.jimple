class com.ophone.MiniPlayer.IPlayback$Stub$Proxy extends java.lang.Object implements com.ophone.MiniPlayer.IPlayback
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.ophone.MiniPlayer.IPlayback$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.ophone.MiniPlayer.IPlayback$Stub$Proxy;
        r1 := @parameter0: android.os.IBinder;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: android.os.IBinder mRemote> = r1;
        return;
    }

    public android.os.IBinder asBinder()
    {
        com.ophone.MiniPlayer.IPlayback$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.ophone.MiniPlayer.IPlayback$Stub$Proxy;
        $r1 = r0.<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: android.os.IBinder mRemote>;
        return $r1;
    }

    public java.lang.String getAlbum() throws android.os.RemoteException
    {
        com.ophone.MiniPlayer.IPlayback$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        java.lang.String r4;
        java.lang.Throwable $r5;

        r0 := @this: com.ophone.MiniPlayer.IPlayback$Stub$Proxy;
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.ophone.MiniPlayer.IPlayback");
        $r3 = r0.<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);
        virtualinvoke r2.<android.os.Parcel: void readException()>();
        r4 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        return r4;

     label2:
        $r5 := @caughtexception;
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public java.util.List getArtist() throws android.os.RemoteException
    {
        com.ophone.MiniPlayer.IPlayback$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        java.util.ArrayList r4;
        java.lang.Throwable $r5;

        r0 := @this: com.ophone.MiniPlayer.IPlayback$Stub$Proxy;
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.ophone.MiniPlayer.IPlayback");
        $r3 = r0.<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);
        virtualinvoke r2.<android.os.Parcel: void readException()>();
        r4 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        return r4;

     label2:
        $r5 := @caughtexception;
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public int getDuration() throws android.os.RemoteException
    {
        com.ophone.MiniPlayer.IPlayback$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        int i0;
        java.lang.Throwable $r4;

        r0 := @this: com.ophone.MiniPlayer.IPlayback$Stub$Proxy;
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.ophone.MiniPlayer.IPlayback");
        $r3 = r0.<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);
        virtualinvoke r2.<android.os.Parcel: void readException()>();
        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        return i0;

     label2:
        $r4 := @caughtexception;
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        throw $r4;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public java.lang.String getId() throws android.os.RemoteException
    {
        com.ophone.MiniPlayer.IPlayback$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        java.lang.String r4;
        java.lang.Throwable $r5;

        r0 := @this: com.ophone.MiniPlayer.IPlayback$Stub$Proxy;
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.ophone.MiniPlayer.IPlayback");
        $r3 = r0.<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);
        virtualinvoke r2.<android.os.Parcel: void readException()>();
        r4 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        return r4;

     label2:
        $r5 := @caughtexception;
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.ophone.MiniPlayer.IPlayback$Stub$Proxy r0;

        r0 := @this: com.ophone.MiniPlayer.IPlayback$Stub$Proxy;
        return "com.ophone.MiniPlayer.IPlayback";
    }

    public int getStatus() throws android.os.RemoteException
    {
        com.ophone.MiniPlayer.IPlayback$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        int i0;
        java.lang.Throwable $r4;

        r0 := @this: com.ophone.MiniPlayer.IPlayback$Stub$Proxy;
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.ophone.MiniPlayer.IPlayback");
        $r3 = r0.<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, r2, 0);
        virtualinvoke r2.<android.os.Parcel: void readException()>();
        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        return i0;

     label2:
        $r4 := @caughtexception;
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        throw $r4;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public int getTime() throws android.os.RemoteException
    {
        com.ophone.MiniPlayer.IPlayback$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        int i0;
        java.lang.Throwable $r4;

        r0 := @this: com.ophone.MiniPlayer.IPlayback$Stub$Proxy;
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.ophone.MiniPlayer.IPlayback");
        $r3 = r0.<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);
        virtualinvoke r2.<android.os.Parcel: void readException()>();
        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        return i0;

     label2:
        $r4 := @caughtexception;
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        throw $r4;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public java.lang.String getTitle() throws android.os.RemoteException
    {
        com.ophone.MiniPlayer.IPlayback$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        java.lang.String r4;
        java.lang.Throwable $r5;

        r0 := @this: com.ophone.MiniPlayer.IPlayback$Stub$Proxy;
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.ophone.MiniPlayer.IPlayback");
        $r3 = r0.<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);
        virtualinvoke r2.<android.os.Parcel: void readException()>();
        r4 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        return r4;

     label2:
        $r5 := @caughtexception;
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public java.lang.String getlyricurlgoogle() throws android.os.RemoteException
    {
        com.ophone.MiniPlayer.IPlayback$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        java.lang.String r4;
        java.lang.Throwable $r5;

        r0 := @this: com.ophone.MiniPlayer.IPlayback$Stub$Proxy;
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.ophone.MiniPlayer.IPlayback");
        $r3 = r0.<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, r2, 0);
        virtualinvoke r2.<android.os.Parcel: void readException()>();
        r4 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        return r4;

     label2:
        $r5 := @caughtexception;
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public java.lang.String getlyricurllocal() throws android.os.RemoteException
    {
        com.ophone.MiniPlayer.IPlayback$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        java.lang.String r4;
        java.lang.Throwable $r5;

        r0 := @this: com.ophone.MiniPlayer.IPlayback$Stub$Proxy;
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.ophone.MiniPlayer.IPlayback");
        $r3 = r0.<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r1, r2, 0);
        virtualinvoke r2.<android.os.Parcel: void readException()>();
        r4 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        return r4;

     label2:
        $r5 := @caughtexception;
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public boolean isPlaying() throws android.os.RemoteException
    {
        com.ophone.MiniPlayer.IPlayback$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        int i0;
        boolean z1;
        java.lang.Throwable $r4;

        r0 := @this: com.ophone.MiniPlayer.IPlayback$Stub$Proxy;
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.ophone.MiniPlayer.IPlayback");
        $r3 = r0.<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);
        virtualinvoke r2.<android.os.Parcel: void readException()>();
        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label1:
        if i0 == 0 goto label3;

        z1 = 1;

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        return z1;

     label3:
        z1 = 0;
        goto label2;

     label4:
        $r4 := @caughtexception;
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        throw $r4;

        catch java.lang.Throwable from label0 to label1 with label4;
    }

    public void next() throws android.os.RemoteException
    {
        com.ophone.MiniPlayer.IPlayback$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.ophone.MiniPlayer.IPlayback$Stub$Proxy;
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.ophone.MiniPlayer.IPlayback");
        $r3 = r0.<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        return;

     label2:
        $r4 := @caughtexception;
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        throw $r4;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public void pause() throws android.os.RemoteException
    {
        com.ophone.MiniPlayer.IPlayback$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.ophone.MiniPlayer.IPlayback$Stub$Proxy;
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.ophone.MiniPlayer.IPlayback");
        $r3 = r0.<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        return;

     label2:
        $r4 := @caughtexception;
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        throw $r4;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public void previous() throws android.os.RemoteException
    {
        com.ophone.MiniPlayer.IPlayback$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.ophone.MiniPlayer.IPlayback$Stub$Proxy;
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.ophone.MiniPlayer.IPlayback");
        $r3 = r0.<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        return;

     label2:
        $r4 := @caughtexception;
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        throw $r4;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public void release() throws android.os.RemoteException
    {
        com.ophone.MiniPlayer.IPlayback$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.ophone.MiniPlayer.IPlayback$Stub$Proxy;
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.ophone.MiniPlayer.IPlayback");
        $r3 = r0.<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        return;

     label2:
        $r4 := @caughtexception;
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        throw $r4;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public void seek(int) throws android.os.RemoteException
    {
        com.ophone.MiniPlayer.IPlayback$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.ophone.MiniPlayer.IPlayback$Stub$Proxy;
        i0 := @parameter0: int;
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.ophone.MiniPlayer.IPlayback");
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);
        $r3 = r0.<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        return;

     label2:
        $r4 := @caughtexception;
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        throw $r4;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public void start() throws android.os.RemoteException
    {
        com.ophone.MiniPlayer.IPlayback$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.ophone.MiniPlayer.IPlayback$Stub$Proxy;
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.ophone.MiniPlayer.IPlayback");
        $r3 = r0.<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        return;

     label2:
        $r4 := @caughtexception;
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        throw $r4;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public void stop() throws android.os.RemoteException
    {
        com.ophone.MiniPlayer.IPlayback$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.ophone.MiniPlayer.IPlayback$Stub$Proxy;
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.ophone.MiniPlayer.IPlayback");
        $r3 = r0.<com.ophone.MiniPlayer.IPlayback$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);
        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        return;

     label2:
        $r4 := @caughtexception;
        virtualinvoke r2.<android.os.Parcel: void recycle()>();
        virtualinvoke r1.<android.os.Parcel: void recycle()>();
        throw $r4;

        catch java.lang.Throwable from label0 to label1 with label2;
    }
}
