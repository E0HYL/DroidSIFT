final class demo.Pinyin4jAppletDemo$2 extends java.lang.Object implements java.awt.event.ActionListener
{
    private final demo.Pinyin4jAppletDemo this$0;

    void <init>(demo.Pinyin4jAppletDemo)
    {
        demo.Pinyin4jAppletDemo$2 r0;
        demo.Pinyin4jAppletDemo r1;

        r0 := @this: demo.Pinyin4jAppletDemo$2;
        r1 := @parameter0: demo.Pinyin4jAppletDemo;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<demo.Pinyin4jAppletDemo$2: demo.Pinyin4jAppletDemo this$0> = r1;
        return;
    }

    private java.lang.String concatPinyinStringArray(java.lang.String[])
    {
        demo.Pinyin4jAppletDemo$2 r0;
        java.lang.String[] r1;
        int i0, $i1, $i2;
        java.lang.StringBuffer r2;
        java.lang.String $r3, $r5, $r7;

        r0 := @this: demo.Pinyin4jAppletDemo$2;
        r1 := @parameter0: java.lang.String[];
        r2 = new java.lang.StringBuffer;
        specialinvoke r2.<java.lang.StringBuffer: void <init>()>();
        if r1 == null goto label1;

        $i1 = lengthof r1;
        if $i1 <= 0 goto label1;

        i0 = 0;

     label0:
        $i2 = lengthof r1;
        if i0 >= $i2 goto label1;

        $r3 = r1[i0];
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        $r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);
        i0 = i0 + 1;
        goto label0;

     label1:
        $r7 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r7;
    }

    private void updateFormattedTextField(char, java.lang.String, java.lang.String, java.lang.String)
    {
        demo.Pinyin4jAppletDemo$2 r0;
        char c0;
        java.lang.String r1, r2, r3, $r7, $r11, $r15, r19, $r24, $r28, $r32, $r36, $r40;
        net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat r4;
        demo.Pinyin4jAppletDemo $r5, $r9, $r13, $r20, $r22, $r26, $r30, $r34, $r38;
        java.lang.String[] $r6, $r10, $r14, r17, r18, $r23, $r27, $r31, $r35, $r39;
        net.sourceforge.pinyin4j.format.HanyuPinyinToneType $r8, $r25, $r29;
        net.sourceforge.pinyin4j.format.HanyuPinyinVCharType $r12, $r33, $r37;
        net.sourceforge.pinyin4j.format.HanyuPinyinCaseType $r16, $r41;
        javax.swing.JTextArea $r21;
        net.sourceforge.pinyin4j.format.exception.BadHanyuPinyinOutputFormatCombination $r42;

        r0 := @this: demo.Pinyin4jAppletDemo$2;
        c0 := @parameter0: char;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        r3 := @parameter3: java.lang.String;
        r4 = new net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat;
        specialinvoke r4.<net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat: void <init>()>();
        $r5 = r0.<demo.Pinyin4jAppletDemo$2: demo.Pinyin4jAppletDemo this$0>;
        $r6 = $r5.<demo.Pinyin4jAppletDemo: java.lang.String[] toneTypes>;
        $r7 = $r6[0];
        if $r7 != r1 goto label5;

        $r8 = <net.sourceforge.pinyin4j.format.HanyuPinyinToneType: net.sourceforge.pinyin4j.format.HanyuPinyinToneType WITH_TONE_NUMBER>;
        virtualinvoke r4.<net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat: void setToneType(net.sourceforge.pinyin4j.format.HanyuPinyinToneType)>($r8);

     label0:
        $r9 = r0.<demo.Pinyin4jAppletDemo$2: demo.Pinyin4jAppletDemo this$0>;
        $r10 = $r9.<demo.Pinyin4jAppletDemo: java.lang.String[] vCharTypes>;
        $r11 = $r10[0];
        if $r11 != r2 goto label7;

        $r12 = <net.sourceforge.pinyin4j.format.HanyuPinyinVCharType: net.sourceforge.pinyin4j.format.HanyuPinyinVCharType WITH_U_AND_COLON>;
        virtualinvoke r4.<net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat: void setVCharType(net.sourceforge.pinyin4j.format.HanyuPinyinVCharType)>($r12);

     label1:
        $r13 = r0.<demo.Pinyin4jAppletDemo$2: demo.Pinyin4jAppletDemo this$0>;
        $r14 = $r13.<demo.Pinyin4jAppletDemo: java.lang.String[] caseTypes>;
        $r15 = $r14[0];
        if $r15 != r3 goto label9;

        $r16 = <net.sourceforge.pinyin4j.format.HanyuPinyinCaseType: net.sourceforge.pinyin4j.format.HanyuPinyinCaseType LOWERCASE>;
        virtualinvoke r4.<net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat: void setCaseType(net.sourceforge.pinyin4j.format.HanyuPinyinCaseType)>($r16);

     label2:
        r17 = staticinvoke <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] toHanyuPinyinStringArray(char,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat)>(c0, r4);

     label3:
        r18 = r17;

     label4:
        r19 = specialinvoke r0.<demo.Pinyin4jAppletDemo$2: java.lang.String concatPinyinStringArray(java.lang.String[])>(r18);
        $r20 = r0.<demo.Pinyin4jAppletDemo$2: demo.Pinyin4jAppletDemo this$0>;
        $r21 = staticinvoke <demo.Pinyin4jAppletDemo: javax.swing.JTextArea access$1000(demo.Pinyin4jAppletDemo)>($r20);
        virtualinvoke $r21.<javax.swing.JTextArea: void setText(java.lang.String)>(r19);
        return;

     label5:
        $r22 = r0.<demo.Pinyin4jAppletDemo$2: demo.Pinyin4jAppletDemo this$0>;
        $r23 = $r22.<demo.Pinyin4jAppletDemo: java.lang.String[] toneTypes>;
        $r24 = $r23[1];
        if $r24 != r1 goto label6;

        $r25 = <net.sourceforge.pinyin4j.format.HanyuPinyinToneType: net.sourceforge.pinyin4j.format.HanyuPinyinToneType WITHOUT_TONE>;
        virtualinvoke r4.<net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat: void setToneType(net.sourceforge.pinyin4j.format.HanyuPinyinToneType)>($r25);
        goto label0;

     label6:
        $r26 = r0.<demo.Pinyin4jAppletDemo$2: demo.Pinyin4jAppletDemo this$0>;
        $r27 = $r26.<demo.Pinyin4jAppletDemo: java.lang.String[] toneTypes>;
        $r28 = $r27[2];
        if $r28 != r1 goto label0;

        $r29 = <net.sourceforge.pinyin4j.format.HanyuPinyinToneType: net.sourceforge.pinyin4j.format.HanyuPinyinToneType WITH_TONE_MARK>;
        virtualinvoke r4.<net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat: void setToneType(net.sourceforge.pinyin4j.format.HanyuPinyinToneType)>($r29);
        goto label0;

     label7:
        $r30 = r0.<demo.Pinyin4jAppletDemo$2: demo.Pinyin4jAppletDemo this$0>;
        $r31 = $r30.<demo.Pinyin4jAppletDemo: java.lang.String[] vCharTypes>;
        $r32 = $r31[1];
        if $r32 != r2 goto label8;

        $r33 = <net.sourceforge.pinyin4j.format.HanyuPinyinVCharType: net.sourceforge.pinyin4j.format.HanyuPinyinVCharType WITH_V>;
        virtualinvoke r4.<net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat: void setVCharType(net.sourceforge.pinyin4j.format.HanyuPinyinVCharType)>($r33);
        goto label1;

     label8:
        $r34 = r0.<demo.Pinyin4jAppletDemo$2: demo.Pinyin4jAppletDemo this$0>;
        $r35 = $r34.<demo.Pinyin4jAppletDemo: java.lang.String[] vCharTypes>;
        $r36 = $r35[2];
        if $r36 != r2 goto label1;

        $r37 = <net.sourceforge.pinyin4j.format.HanyuPinyinVCharType: net.sourceforge.pinyin4j.format.HanyuPinyinVCharType WITH_U_UNICODE>;
        virtualinvoke r4.<net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat: void setVCharType(net.sourceforge.pinyin4j.format.HanyuPinyinVCharType)>($r37);
        goto label1;

     label9:
        $r38 = r0.<demo.Pinyin4jAppletDemo$2: demo.Pinyin4jAppletDemo this$0>;
        $r39 = $r38.<demo.Pinyin4jAppletDemo: java.lang.String[] caseTypes>;
        $r40 = $r39[1];
        if $r40 != r3 goto label2;

        $r41 = <net.sourceforge.pinyin4j.format.HanyuPinyinCaseType: net.sourceforge.pinyin4j.format.HanyuPinyinCaseType UPPERCASE>;
        virtualinvoke r4.<net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat: void setCaseType(net.sourceforge.pinyin4j.format.HanyuPinyinCaseType)>($r41);
        goto label2;

     label10:
        $r42 := @caughtexception;
        virtualinvoke $r42.<net.sourceforge.pinyin4j.format.exception.BadHanyuPinyinOutputFormatCombination: void printStackTrace()>();
        r18 = null;
        goto label4;

        catch net.sourceforge.pinyin4j.format.exception.BadHanyuPinyinOutputFormatCombination from label2 to label3 with label10;
    }

    private void updateUnformattedTextField(char)
    {
        demo.Pinyin4jAppletDemo$2 r0;
        char c0;
        demo.Pinyin4jAppletDemo $r1, $r5, $r9, $r13, $r17, $r21;
        javax.swing.JTextArea $r2, $r6, $r10, $r14, $r18, $r22;
        java.lang.String[] $r3, $r7, $r11, $r15, $r19, $r23;
        java.lang.String $r4, $r8, $r12, $r16, $r20, $r24;

        r0 := @this: demo.Pinyin4jAppletDemo$2;
        c0 := @parameter0: char;
        $r1 = r0.<demo.Pinyin4jAppletDemo$2: demo.Pinyin4jAppletDemo this$0>;
        $r2 = staticinvoke <demo.Pinyin4jAppletDemo: javax.swing.JTextArea access$400(demo.Pinyin4jAppletDemo)>($r1);
        $r3 = staticinvoke <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] toHanyuPinyinStringArray(char)>(c0);
        $r4 = specialinvoke r0.<demo.Pinyin4jAppletDemo$2: java.lang.String concatPinyinStringArray(java.lang.String[])>($r3);
        virtualinvoke $r2.<javax.swing.JTextArea: void setText(java.lang.String)>($r4);
        $r5 = r0.<demo.Pinyin4jAppletDemo$2: demo.Pinyin4jAppletDemo this$0>;
        $r6 = staticinvoke <demo.Pinyin4jAppletDemo: javax.swing.JTextArea access$500(demo.Pinyin4jAppletDemo)>($r5);
        $r7 = staticinvoke <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] toTongyongPinyinStringArray(char)>(c0);
        $r8 = specialinvoke r0.<demo.Pinyin4jAppletDemo$2: java.lang.String concatPinyinStringArray(java.lang.String[])>($r7);
        virtualinvoke $r6.<javax.swing.JTextArea: void setText(java.lang.String)>($r8);
        $r9 = r0.<demo.Pinyin4jAppletDemo$2: demo.Pinyin4jAppletDemo this$0>;
        $r10 = staticinvoke <demo.Pinyin4jAppletDemo: javax.swing.JTextArea access$600(demo.Pinyin4jAppletDemo)>($r9);
        $r11 = staticinvoke <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] toWadeGilesPinyinStringArray(char)>(c0);
        $r12 = specialinvoke r0.<demo.Pinyin4jAppletDemo$2: java.lang.String concatPinyinStringArray(java.lang.String[])>($r11);
        virtualinvoke $r10.<javax.swing.JTextArea: void setText(java.lang.String)>($r12);
        $r13 = r0.<demo.Pinyin4jAppletDemo$2: demo.Pinyin4jAppletDemo this$0>;
        $r14 = staticinvoke <demo.Pinyin4jAppletDemo: javax.swing.JTextArea access$700(demo.Pinyin4jAppletDemo)>($r13);
        $r15 = staticinvoke <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] toMPS2PinyinStringArray(char)>(c0);
        $r16 = specialinvoke r0.<demo.Pinyin4jAppletDemo$2: java.lang.String concatPinyinStringArray(java.lang.String[])>($r15);
        virtualinvoke $r14.<javax.swing.JTextArea: void setText(java.lang.String)>($r16);
        $r17 = r0.<demo.Pinyin4jAppletDemo$2: demo.Pinyin4jAppletDemo this$0>;
        $r18 = staticinvoke <demo.Pinyin4jAppletDemo: javax.swing.JTextArea access$800(demo.Pinyin4jAppletDemo)>($r17);
        $r19 = staticinvoke <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] toYalePinyinStringArray(char)>(c0);
        $r20 = specialinvoke r0.<demo.Pinyin4jAppletDemo$2: java.lang.String concatPinyinStringArray(java.lang.String[])>($r19);
        virtualinvoke $r18.<javax.swing.JTextArea: void setText(java.lang.String)>($r20);
        $r21 = r0.<demo.Pinyin4jAppletDemo$2: demo.Pinyin4jAppletDemo this$0>;
        $r22 = staticinvoke <demo.Pinyin4jAppletDemo: javax.swing.JTextArea access$900(demo.Pinyin4jAppletDemo)>($r21);
        $r23 = staticinvoke <net.sourceforge.pinyin4j.PinyinHelper: java.lang.String[] toGwoyeuRomatzyhStringArray(char)>(c0);
        $r24 = specialinvoke r0.<demo.Pinyin4jAppletDemo$2: java.lang.String concatPinyinStringArray(java.lang.String[])>($r23);
        virtualinvoke $r22.<javax.swing.JTextArea: void setText(java.lang.String)>($r24);
        return;
    }

    public void actionPerformed(java.awt.event.ActionEvent)
    {
        demo.Pinyin4jAppletDemo$2 r0;
        java.awt.event.ActionEvent r1;
        demo.Pinyin4jAppletDemo $r2, $r4, $r8, $r12;
        java.lang.String $r3, $r7, $r11, $r15;
        char c0;
        javax.swing.JComboBox $r5, $r9, $r13;
        java.lang.Object $r6, $r10, $r14;

        r0 := @this: demo.Pinyin4jAppletDemo$2;
        r1 := @parameter0: java.awt.event.ActionEvent;
        $r2 = r0.<demo.Pinyin4jAppletDemo$2: demo.Pinyin4jAppletDemo this$0>;
        $r3 = staticinvoke <demo.Pinyin4jAppletDemo: java.lang.String access$000(demo.Pinyin4jAppletDemo)>($r2);
        c0 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);
        specialinvoke r0.<demo.Pinyin4jAppletDemo$2: void updateUnformattedTextField(char)>(c0);
        $r4 = r0.<demo.Pinyin4jAppletDemo$2: demo.Pinyin4jAppletDemo this$0>;
        $r5 = staticinvoke <demo.Pinyin4jAppletDemo: javax.swing.JComboBox access$100(demo.Pinyin4jAppletDemo)>($r4);
        $r6 = virtualinvoke $r5.<javax.swing.JComboBox: java.lang.Object getSelectedItem()>();
        $r7 = (java.lang.String) $r6;
        $r8 = r0.<demo.Pinyin4jAppletDemo$2: demo.Pinyin4jAppletDemo this$0>;
        $r9 = staticinvoke <demo.Pinyin4jAppletDemo: javax.swing.JComboBox access$200(demo.Pinyin4jAppletDemo)>($r8);
        $r10 = virtualinvoke $r9.<javax.swing.JComboBox: java.lang.Object getSelectedItem()>();
        $r11 = (java.lang.String) $r10;
        $r12 = r0.<demo.Pinyin4jAppletDemo$2: demo.Pinyin4jAppletDemo this$0>;
        $r13 = staticinvoke <demo.Pinyin4jAppletDemo: javax.swing.JComboBox access$300(demo.Pinyin4jAppletDemo)>($r12);
        $r14 = virtualinvoke $r13.<javax.swing.JComboBox: java.lang.Object getSelectedItem()>();
        $r15 = (java.lang.String) $r14;
        specialinvoke r0.<demo.Pinyin4jAppletDemo$2: void updateFormattedTextField(char,java.lang.String,java.lang.String,java.lang.String)>(c0, $r7, $r11, $r15);
        return;
    }
}
