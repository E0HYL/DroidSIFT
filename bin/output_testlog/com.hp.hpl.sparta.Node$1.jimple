class com.hp.hpl.sparta.Node$1 extends java.lang.Object implements com.hp.hpl.sparta.xpath.BooleanExprVisitor
{
    private final com.hp.hpl.sparta.Node this$0;
    private final java.lang.String val$msgContext;
    private final com.hp.hpl.sparta.Element val$newChild;
    private final com.hp.hpl.sparta.Element val$parent;
    private final java.lang.String val$tagName;

    void <init>(com.hp.hpl.sparta.Node, com.hp.hpl.sparta.Element, com.hp.hpl.sparta.Element, java.lang.String, java.lang.String) throws com.hp.hpl.sparta.xpath.XPathException
    {
        com.hp.hpl.sparta.Node$1 r0;
        com.hp.hpl.sparta.Node r1;
        com.hp.hpl.sparta.Element r2, r3;
        java.lang.String r4, r5;

        r0 := @this: com.hp.hpl.sparta.Node$1;
        r1 := @parameter0: com.hp.hpl.sparta.Node;
        r2 := @parameter1: com.hp.hpl.sparta.Element;
        r3 := @parameter2: com.hp.hpl.sparta.Element;
        r4 := @parameter3: java.lang.String;
        r5 := @parameter4: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<com.hp.hpl.sparta.Node$1: com.hp.hpl.sparta.Node this$0> = r1;
        r0.<com.hp.hpl.sparta.Node$1: com.hp.hpl.sparta.Element val$newChild> = r2;
        r0.<com.hp.hpl.sparta.Node$1: com.hp.hpl.sparta.Element val$parent> = r3;
        r0.<com.hp.hpl.sparta.Node$1: java.lang.String val$msgContext> = r4;
        r0.<com.hp.hpl.sparta.Node$1: java.lang.String val$tagName> = r5;
        return;
    }

    public void visit(com.hp.hpl.sparta.xpath.AttrEqualsExpr) throws com.hp.hpl.sparta.xpath.XPathException
    {
        com.hp.hpl.sparta.Node$1 r0;
        com.hp.hpl.sparta.xpath.AttrEqualsExpr r1;
        com.hp.hpl.sparta.Element $r2;
        java.lang.String $r3, $r4;

        r0 := @this: com.hp.hpl.sparta.Node$1;
        r1 := @parameter0: com.hp.hpl.sparta.xpath.AttrEqualsExpr;
        $r2 = r0.<com.hp.hpl.sparta.Node$1: com.hp.hpl.sparta.Element val$newChild>;
        $r3 = virtualinvoke r1.<com.hp.hpl.sparta.xpath.AttrExpr: java.lang.String getAttrName()>();
        $r4 = virtualinvoke r1.<com.hp.hpl.sparta.xpath.AttrCompareExpr: java.lang.String getAttrValue()>();
        virtualinvoke $r2.<com.hp.hpl.sparta.Element: void setAttribute(java.lang.String,java.lang.String)>($r3, $r4);
        return;
    }

    public void visit(com.hp.hpl.sparta.xpath.AttrExistsExpr) throws com.hp.hpl.sparta.xpath.XPathException
    {
        com.hp.hpl.sparta.Node$1 r0;
        com.hp.hpl.sparta.xpath.AttrExistsExpr r1;
        com.hp.hpl.sparta.Element $r2;
        java.lang.String $r3;

        r0 := @this: com.hp.hpl.sparta.Node$1;
        r1 := @parameter0: com.hp.hpl.sparta.xpath.AttrExistsExpr;
        $r2 = r0.<com.hp.hpl.sparta.Node$1: com.hp.hpl.sparta.Element val$newChild>;
        $r3 = virtualinvoke r1.<com.hp.hpl.sparta.xpath.AttrExpr: java.lang.String getAttrName()>();
        virtualinvoke $r2.<com.hp.hpl.sparta.Element: void setAttribute(java.lang.String,java.lang.String)>($r3, "something");
        return;
    }

    public void visit(com.hp.hpl.sparta.xpath.AttrGreaterExpr) throws com.hp.hpl.sparta.xpath.XPathException
    {
        com.hp.hpl.sparta.Node$1 r0;
        com.hp.hpl.sparta.xpath.AttrGreaterExpr r1;
        com.hp.hpl.sparta.Element $r2;
        java.lang.String $r3, $r4;

        r0 := @this: com.hp.hpl.sparta.Node$1;
        r1 := @parameter0: com.hp.hpl.sparta.xpath.AttrGreaterExpr;
        $r2 = r0.<com.hp.hpl.sparta.Node$1: com.hp.hpl.sparta.Element val$newChild>;
        $r3 = virtualinvoke r1.<com.hp.hpl.sparta.xpath.AttrExpr: java.lang.String getAttrName()>();
        $r4 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(9223372036854775807L);
        virtualinvoke $r2.<com.hp.hpl.sparta.Element: void setAttribute(java.lang.String,java.lang.String)>($r3, $r4);
        return;
    }

    public void visit(com.hp.hpl.sparta.xpath.AttrLessExpr) throws com.hp.hpl.sparta.xpath.XPathException
    {
        com.hp.hpl.sparta.Node$1 r0;
        com.hp.hpl.sparta.xpath.AttrLessExpr r1;
        com.hp.hpl.sparta.Element $r2;
        java.lang.String $r3, $r4;

        r0 := @this: com.hp.hpl.sparta.Node$1;
        r1 := @parameter0: com.hp.hpl.sparta.xpath.AttrLessExpr;
        $r2 = r0.<com.hp.hpl.sparta.Node$1: com.hp.hpl.sparta.Element val$newChild>;
        $r3 = virtualinvoke r1.<com.hp.hpl.sparta.xpath.AttrExpr: java.lang.String getAttrName()>();
        $r4 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(-9223372036854775808L);
        virtualinvoke $r2.<com.hp.hpl.sparta.Element: void setAttribute(java.lang.String,java.lang.String)>($r3, $r4);
        return;
    }

    public void visit(com.hp.hpl.sparta.xpath.AttrNotEqualsExpr) throws com.hp.hpl.sparta.xpath.XPathException
    {
        com.hp.hpl.sparta.Node$1 r0;
        com.hp.hpl.sparta.xpath.AttrNotEqualsExpr r1;
        java.lang.StringBuffer $r2, $r5, $r7;
        com.hp.hpl.sparta.Element $r3;
        java.lang.String $r4, $r6, $r8;

        r0 := @this: com.hp.hpl.sparta.Node$1;
        r1 := @parameter0: com.hp.hpl.sparta.xpath.AttrNotEqualsExpr;
        $r3 = r0.<com.hp.hpl.sparta.Node$1: com.hp.hpl.sparta.Element val$newChild>;
        $r4 = virtualinvoke r1.<com.hp.hpl.sparta.xpath.AttrExpr: java.lang.String getAttrName()>();
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("not ");
        $r6 = virtualinvoke r1.<com.hp.hpl.sparta.xpath.AttrCompareExpr: java.lang.String getAttrValue()>();
        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r3.<com.hp.hpl.sparta.Element: void setAttribute(java.lang.String,java.lang.String)>($r4, $r8);
        return;
    }

    public void visit(com.hp.hpl.sparta.xpath.PositionEqualsExpr) throws com.hp.hpl.sparta.xpath.XPathException
    {
        com.hp.hpl.sparta.Node$1 r0;
        com.hp.hpl.sparta.xpath.PositionEqualsExpr r1;
        int i0, i1;
        com.hp.hpl.sparta.Element $r2, $r6, $r7;
        com.hp.hpl.sparta.xpath.XPathException $r3;
        java.lang.String $r4, $r8;
        com.hp.hpl.sparta.xpath.XPath $r5;

        r0 := @this: com.hp.hpl.sparta.Node$1;
        r1 := @parameter0: com.hp.hpl.sparta.xpath.PositionEqualsExpr;
        i1 = virtualinvoke r1.<com.hp.hpl.sparta.xpath.PositionEqualsExpr: int getPosition()>();
        $r2 = r0.<com.hp.hpl.sparta.Node$1: com.hp.hpl.sparta.Element val$parent>;
        if $r2 != null goto label0;

        if i1 == 1 goto label0;

        $r3 = new com.hp.hpl.sparta.xpath.XPathException;
        $r4 = r0.<com.hp.hpl.sparta.Node$1: java.lang.String val$msgContext>;
        $r5 = staticinvoke <com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(java.lang.String)>($r4);
        specialinvoke $r3.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String)>($r5, "Position of root node must be 1");
        throw $r3;

     label0:
        i0 = 1;

     label1:
        if i0 < i1 goto label2;

        return;

     label2:
        $r6 = r0.<com.hp.hpl.sparta.Node$1: com.hp.hpl.sparta.Element val$parent>;
        $r7 = new com.hp.hpl.sparta.Element;
        $r8 = r0.<com.hp.hpl.sparta.Node$1: java.lang.String val$tagName>;
        specialinvoke $r7.<com.hp.hpl.sparta.Element: void <init>(java.lang.String)>($r8);
        virtualinvoke $r6.<com.hp.hpl.sparta.Element: void appendChild(com.hp.hpl.sparta.Node)>($r7);
        i0 = i0 + 1;
        goto label1;
    }

    public void visit(com.hp.hpl.sparta.xpath.TextEqualsExpr) throws com.hp.hpl.sparta.xpath.XPathException
    {
        com.hp.hpl.sparta.Node$1 r0;
        com.hp.hpl.sparta.xpath.TextEqualsExpr r1;
        com.hp.hpl.sparta.Text $r2;
        com.hp.hpl.sparta.Element $r3;
        java.lang.String $r4;

        r0 := @this: com.hp.hpl.sparta.Node$1;
        r1 := @parameter0: com.hp.hpl.sparta.xpath.TextEqualsExpr;
        $r3 = r0.<com.hp.hpl.sparta.Node$1: com.hp.hpl.sparta.Element val$newChild>;
        $r2 = new com.hp.hpl.sparta.Text;
        $r4 = virtualinvoke r1.<com.hp.hpl.sparta.xpath.TextCompareExpr: java.lang.String getValue()>();
        specialinvoke $r2.<com.hp.hpl.sparta.Text: void <init>(java.lang.String)>($r4);
        virtualinvoke $r3.<com.hp.hpl.sparta.Element: void appendChild(com.hp.hpl.sparta.Node)>($r2);
        return;
    }

    public void visit(com.hp.hpl.sparta.xpath.TextExistsExpr) throws com.hp.hpl.sparta.xpath.XPathException
    {
        com.hp.hpl.sparta.Node$1 r0;
        com.hp.hpl.sparta.xpath.TextExistsExpr r1;
        com.hp.hpl.sparta.Text $r2;
        com.hp.hpl.sparta.Element $r3;

        r0 := @this: com.hp.hpl.sparta.Node$1;
        r1 := @parameter0: com.hp.hpl.sparta.xpath.TextExistsExpr;
        $r3 = r0.<com.hp.hpl.sparta.Node$1: com.hp.hpl.sparta.Element val$newChild>;
        $r2 = new com.hp.hpl.sparta.Text;
        specialinvoke $r2.<com.hp.hpl.sparta.Text: void <init>(java.lang.String)>("something");
        virtualinvoke $r3.<com.hp.hpl.sparta.Element: void appendChild(com.hp.hpl.sparta.Node)>($r2);
        return;
    }

    public void visit(com.hp.hpl.sparta.xpath.TextNotEqualsExpr) throws com.hp.hpl.sparta.xpath.XPathException
    {
        com.hp.hpl.sparta.Node$1 r0;
        com.hp.hpl.sparta.xpath.TextNotEqualsExpr r1;
        com.hp.hpl.sparta.Text $r2;
        java.lang.StringBuffer $r3, $r5, $r7;
        com.hp.hpl.sparta.Element $r4;
        java.lang.String $r6, $r8;

        r0 := @this: com.hp.hpl.sparta.Node$1;
        r1 := @parameter0: com.hp.hpl.sparta.xpath.TextNotEqualsExpr;
        $r4 = r0.<com.hp.hpl.sparta.Node$1: com.hp.hpl.sparta.Element val$newChild>;
        $r2 = new com.hp.hpl.sparta.Text;
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("not ");
        $r6 = virtualinvoke r1.<com.hp.hpl.sparta.xpath.TextCompareExpr: java.lang.String getValue()>();
        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r2.<com.hp.hpl.sparta.Text: void <init>(java.lang.String)>($r8);
        virtualinvoke $r4.<com.hp.hpl.sparta.Element: void appendChild(com.hp.hpl.sparta.Node)>($r2);
        return;
    }

    public void visit(com.hp.hpl.sparta.xpath.TrueExpr)
    {
        com.hp.hpl.sparta.Node$1 r0;
        com.hp.hpl.sparta.xpath.TrueExpr r1;

        r0 := @this: com.hp.hpl.sparta.Node$1;
        r1 := @parameter0: com.hp.hpl.sparta.xpath.TrueExpr;
        return;
    }
}
