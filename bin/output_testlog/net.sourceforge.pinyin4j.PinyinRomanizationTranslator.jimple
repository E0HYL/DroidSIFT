class net.sourceforge.pinyin4j.PinyinRomanizationTranslator extends java.lang.Object
{

    void <init>()
    {
        net.sourceforge.pinyin4j.PinyinRomanizationTranslator r0;

        r0 := @this: net.sourceforge.pinyin4j.PinyinRomanizationTranslator;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    static java.lang.String convertRomanizationSystem(java.lang.String, net.sourceforge.pinyin4j.PinyinRomanizationType, net.sourceforge.pinyin4j.PinyinRomanizationType)
    {
        java.lang.String r0, r3, r4, $r7, r12, $r18, $r21, r22, r26;
        net.sourceforge.pinyin4j.PinyinRomanizationType r1, r2;
        java.lang.StringBuffer $r5, $r6, $r8, $r9, $r10, $r11, $r16, $r17, $r19, $r20, $r23, $r24, $r25;
        net.sourceforge.pinyin4j.PinyinRomanizationResource $r13;
        com.hp.hpl.sparta.Document $r14;
        com.hp.hpl.sparta.Element r15;
        com.hp.hpl.sparta.ParseException $r27;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: net.sourceforge.pinyin4j.PinyinRomanizationType;
        r2 := @parameter2: net.sourceforge.pinyin4j.PinyinRomanizationType;
        r3 = staticinvoke <net.sourceforge.pinyin4j.TextHelper: java.lang.String extractPinyinString(java.lang.String)>(r0);
        r4 = staticinvoke <net.sourceforge.pinyin4j.TextHelper: java.lang.String extractToneNumber(java.lang.String)>(r0);

     label0:
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("//");
        $r7 = virtualinvoke r1.<net.sourceforge.pinyin4j.PinyinRomanizationType: java.lang.String getTagName()>();
        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[text()=\'");
        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);
        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\']");
        r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();
        $r13 = staticinvoke <net.sourceforge.pinyin4j.PinyinRomanizationResource: net.sourceforge.pinyin4j.PinyinRomanizationResource getInstance()>();
        $r14 = virtualinvoke $r13.<net.sourceforge.pinyin4j.PinyinRomanizationResource: com.hp.hpl.sparta.Document getPinyinMappingDoc()>();
        r15 = virtualinvoke $r14.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String)>(r12);

     label1:
        if r15 == null goto label5;

     label2:
        $r16 = new java.lang.StringBuffer;
        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("../");
        $r18 = virtualinvoke r2.<net.sourceforge.pinyin4j.PinyinRomanizationType: java.lang.String getTagName()>();
        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);
        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/text()");
        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();
        r22 = virtualinvoke r15.<com.hp.hpl.sparta.Element: java.lang.String xpathSelectString(java.lang.String)>($r21);
        $r23 = new java.lang.StringBuffer;
        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();
        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r22);
        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);
        r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        return r26;

     label4:
        $r27 := @caughtexception;
        virtualinvoke $r27.<com.hp.hpl.sparta.ParseException: void printStackTrace()>();

     label5:
        return null;

        catch com.hp.hpl.sparta.ParseException from label0 to label1 with label4;
        catch com.hp.hpl.sparta.ParseException from label2 to label3 with label4;
    }
}
