public class com.hp.hpl.sparta.xpath.TextNotEqualsExpr extends com.hp.hpl.sparta.xpath.TextCompareExpr
{

    void <init>(java.lang.String)
    {
        com.hp.hpl.sparta.xpath.TextNotEqualsExpr r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.sparta.xpath.TextNotEqualsExpr;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<com.hp.hpl.sparta.xpath.TextCompareExpr: void <init>(java.lang.String)>(r1);
        return;
    }

    public void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor) throws com.hp.hpl.sparta.xpath.XPathException
    {
        com.hp.hpl.sparta.xpath.TextNotEqualsExpr r0;
        com.hp.hpl.sparta.xpath.BooleanExprVisitor r1;

        r0 := @this: com.hp.hpl.sparta.xpath.TextNotEqualsExpr;
        r1 := @parameter0: com.hp.hpl.sparta.xpath.BooleanExprVisitor;
        interfaceinvoke r1.<com.hp.hpl.sparta.xpath.BooleanExprVisitor: void visit(com.hp.hpl.sparta.xpath.TextNotEqualsExpr)>(r0);
        return;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.sparta.xpath.TextNotEqualsExpr r0;
        java.lang.String $r1;

        r0 := @this: com.hp.hpl.sparta.xpath.TextNotEqualsExpr;
        $r1 = virtualinvoke r0.<com.hp.hpl.sparta.xpath.TextCompareExpr: java.lang.String toString(java.lang.String)>("!=");
        return $r1;
    }
}
