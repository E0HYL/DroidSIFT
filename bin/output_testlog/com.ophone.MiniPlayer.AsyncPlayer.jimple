public class com.ophone.MiniPlayer.AsyncPlayer extends java.lang.Object
{
    private static final int PLAY;
    private static final int STOP;
    private static final boolean mDebug;
    private java.util.LinkedList mCmdQueue;
    private android.media.MediaPlayer mPlayer;
    private int mState;
    private java.lang.String mTag;
    private com.ophone.MiniPlayer.AsyncPlayer$Thread mThread;
    private android.os.PowerManager$WakeLock mWakeLock;

    public void <init>(java.lang.String)
    {
        com.ophone.MiniPlayer.AsyncPlayer r0;
        java.lang.String r1;
        java.util.LinkedList $r2;

        r0 := @this: com.ophone.MiniPlayer.AsyncPlayer;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.util.LinkedList;
        specialinvoke $r2.<java.util.LinkedList: void <init>()>();
        r0.<com.ophone.MiniPlayer.AsyncPlayer: java.util.LinkedList mCmdQueue> = $r2;
        r0.<com.ophone.MiniPlayer.AsyncPlayer: int mState> = 2;
        if r1 == null goto label0;

        r0.<com.ophone.MiniPlayer.AsyncPlayer: java.lang.String mTag> = r1;
        return;

     label0:
        r0.<com.ophone.MiniPlayer.AsyncPlayer: java.lang.String mTag> = "AsyncPlayer";
        return;
    }

    static java.lang.String access$0(com.ophone.MiniPlayer.AsyncPlayer)
    {
        com.ophone.MiniPlayer.AsyncPlayer r0;
        java.lang.String $r1;

        r0 := @parameter0: com.ophone.MiniPlayer.AsyncPlayer;
        $r1 = r0.<com.ophone.MiniPlayer.AsyncPlayer: java.lang.String mTag>;
        return $r1;
    }

    static java.util.LinkedList access$1(com.ophone.MiniPlayer.AsyncPlayer)
    {
        com.ophone.MiniPlayer.AsyncPlayer r0;
        java.util.LinkedList $r1;

        r0 := @parameter0: com.ophone.MiniPlayer.AsyncPlayer;
        $r1 = r0.<com.ophone.MiniPlayer.AsyncPlayer: java.util.LinkedList mCmdQueue>;
        return $r1;
    }

    static void access$2(com.ophone.MiniPlayer.AsyncPlayer, com.ophone.MiniPlayer.AsyncPlayer$Command)
    {
        com.ophone.MiniPlayer.AsyncPlayer r0;
        com.ophone.MiniPlayer.AsyncPlayer$Command r1;

        r0 := @parameter0: com.ophone.MiniPlayer.AsyncPlayer;
        r1 := @parameter1: com.ophone.MiniPlayer.AsyncPlayer$Command;
        specialinvoke r0.<com.ophone.MiniPlayer.AsyncPlayer: void startSound(com.ophone.MiniPlayer.AsyncPlayer$Command)>(r1);
        return;
    }

    static android.media.MediaPlayer access$3(com.ophone.MiniPlayer.AsyncPlayer)
    {
        com.ophone.MiniPlayer.AsyncPlayer r0;
        android.media.MediaPlayer $r1;

        r0 := @parameter0: com.ophone.MiniPlayer.AsyncPlayer;
        $r1 = r0.<com.ophone.MiniPlayer.AsyncPlayer: android.media.MediaPlayer mPlayer>;
        return $r1;
    }

    static void access$4(com.ophone.MiniPlayer.AsyncPlayer, android.media.MediaPlayer)
    {
        com.ophone.MiniPlayer.AsyncPlayer r0;
        android.media.MediaPlayer r1;

        r0 := @parameter0: com.ophone.MiniPlayer.AsyncPlayer;
        r1 := @parameter1: android.media.MediaPlayer;
        r0.<com.ophone.MiniPlayer.AsyncPlayer: android.media.MediaPlayer mPlayer> = r1;
        return;
    }

    static void access$5(com.ophone.MiniPlayer.AsyncPlayer, com.ophone.MiniPlayer.AsyncPlayer$Thread)
    {
        com.ophone.MiniPlayer.AsyncPlayer r0;
        com.ophone.MiniPlayer.AsyncPlayer$Thread r1;

        r0 := @parameter0: com.ophone.MiniPlayer.AsyncPlayer;
        r1 := @parameter1: com.ophone.MiniPlayer.AsyncPlayer$Thread;
        r0.<com.ophone.MiniPlayer.AsyncPlayer: com.ophone.MiniPlayer.AsyncPlayer$Thread mThread> = r1;
        return;
    }

    static void access$6(com.ophone.MiniPlayer.AsyncPlayer)
    {
        com.ophone.MiniPlayer.AsyncPlayer r0;

        r0 := @parameter0: com.ophone.MiniPlayer.AsyncPlayer;
        specialinvoke r0.<com.ophone.MiniPlayer.AsyncPlayer: void releaseWakeLock()>();
        return;
    }

    private void acquireWakeLock()
    {
        com.ophone.MiniPlayer.AsyncPlayer r0;
        android.os.PowerManager$WakeLock $r1, $r2;

        r0 := @this: com.ophone.MiniPlayer.AsyncPlayer;
        $r1 = r0.<com.ophone.MiniPlayer.AsyncPlayer: android.os.PowerManager$WakeLock mWakeLock>;
        if $r1 == null goto label0;

        $r2 = r0.<com.ophone.MiniPlayer.AsyncPlayer: android.os.PowerManager$WakeLock mWakeLock>;
        virtualinvoke $r2.<android.os.PowerManager$WakeLock: void acquire()>();

     label0:
        return;
    }

    private void enqueueLocked(com.ophone.MiniPlayer.AsyncPlayer$Command)
    {
        com.ophone.MiniPlayer.AsyncPlayer r0;
        com.ophone.MiniPlayer.AsyncPlayer$Command r1;
        java.util.LinkedList $r2;
        com.ophone.MiniPlayer.AsyncPlayer$Thread $r3, $r4, $r5;

        r0 := @this: com.ophone.MiniPlayer.AsyncPlayer;
        r1 := @parameter0: com.ophone.MiniPlayer.AsyncPlayer$Command;
        $r2 = r0.<com.ophone.MiniPlayer.AsyncPlayer: java.util.LinkedList mCmdQueue>;
        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>(r1);
        $r3 = r0.<com.ophone.MiniPlayer.AsyncPlayer: com.ophone.MiniPlayer.AsyncPlayer$Thread mThread>;
        if $r3 != null goto label0;

        specialinvoke r0.<com.ophone.MiniPlayer.AsyncPlayer: void acquireWakeLock()>();
        $r4 = new com.ophone.MiniPlayer.AsyncPlayer$Thread;
        specialinvoke $r4.<com.ophone.MiniPlayer.AsyncPlayer$Thread: void <init>(com.ophone.MiniPlayer.AsyncPlayer)>(r0);
        r0.<com.ophone.MiniPlayer.AsyncPlayer: com.ophone.MiniPlayer.AsyncPlayer$Thread mThread> = $r4;
        $r5 = r0.<com.ophone.MiniPlayer.AsyncPlayer: com.ophone.MiniPlayer.AsyncPlayer$Thread mThread>;
        virtualinvoke $r5.<com.ophone.MiniPlayer.AsyncPlayer$Thread: void start()>();

     label0:
        return;
    }

    private void releaseWakeLock()
    {
        com.ophone.MiniPlayer.AsyncPlayer r0;
        android.os.PowerManager$WakeLock $r1, $r2;

        r0 := @this: com.ophone.MiniPlayer.AsyncPlayer;
        $r1 = r0.<com.ophone.MiniPlayer.AsyncPlayer: android.os.PowerManager$WakeLock mWakeLock>;
        if $r1 == null goto label0;

        $r2 = r0.<com.ophone.MiniPlayer.AsyncPlayer: android.os.PowerManager$WakeLock mWakeLock>;
        virtualinvoke $r2.<android.os.PowerManager$WakeLock: void release()>();

     label0:
        return;
    }

    private void startSound(com.ophone.MiniPlayer.AsyncPlayer$Command)
    {
        com.ophone.MiniPlayer.AsyncPlayer r0;
        com.ophone.MiniPlayer.AsyncPlayer$Command r1;
        android.media.MediaPlayer r2, $r5, $r6;
        int $i0;
        android.content.Context $r3;
        android.net.Uri $r4, $r11, $r18;
        boolean $z0;
        java.io.IOException $r7, r8;
        java.lang.String $r9, $r13, $r16, $r20;
        java.lang.StringBuilder $r10, $r12, $r17, $r19;
        java.lang.IllegalStateException $r14, r15;

        r0 := @this: com.ophone.MiniPlayer.AsyncPlayer;
        r1 := @parameter0: com.ophone.MiniPlayer.AsyncPlayer$Command;

     label0:
        r2 = new android.media.MediaPlayer;
        specialinvoke r2.<android.media.MediaPlayer: void <init>()>();
        $i0 = r1.<com.ophone.MiniPlayer.AsyncPlayer$Command: int stream>;
        virtualinvoke r2.<android.media.MediaPlayer: void setAudioStreamType(int)>($i0);
        $r3 = r1.<com.ophone.MiniPlayer.AsyncPlayer$Command: android.content.Context context>;
        $r4 = r1.<com.ophone.MiniPlayer.AsyncPlayer$Command: android.net.Uri uri>;
        virtualinvoke r2.<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>($r3, $r4);
        $z0 = r1.<com.ophone.MiniPlayer.AsyncPlayer$Command: boolean looping>;
        virtualinvoke r2.<android.media.MediaPlayer: void setLooping(boolean)>($z0);
        virtualinvoke r2.<android.media.MediaPlayer: void prepare()>();
        virtualinvoke r2.<android.media.MediaPlayer: void start()>();
        $r5 = r0.<com.ophone.MiniPlayer.AsyncPlayer: android.media.MediaPlayer mPlayer>;
        if $r5 == null goto label1;

        $r6 = r0.<com.ophone.MiniPlayer.AsyncPlayer: android.media.MediaPlayer mPlayer>;
        virtualinvoke $r6.<android.media.MediaPlayer: void release()>();

     label1:
        r0.<com.ophone.MiniPlayer.AsyncPlayer: android.media.MediaPlayer mPlayer> = r2;

     label2:
        return;

     label3:
        $r7 := @caughtexception;
        r8 = $r7;
        $r9 = r0.<com.ophone.MiniPlayer.AsyncPlayer: java.lang.String mTag>;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("error loading sound for ");
        $r11 = r1.<com.ophone.MiniPlayer.AsyncPlayer$Command: android.net.Uri uri>;
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, $r13, r8);
        return;

     label4:
        $r14 := @caughtexception;
        r15 = $r14;
        $r16 = r0.<com.ophone.MiniPlayer.AsyncPlayer: java.lang.String mTag>;
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("IllegalStateException (content provider died?) ");
        $r18 = r1.<com.ophone.MiniPlayer.AsyncPlayer$Command: android.net.Uri uri>;
        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r16, $r20, r15);
        return;

        catch java.io.IOException from label0 to label1 with label3;
        catch java.lang.IllegalStateException from label0 to label1 with label4;
        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.IllegalStateException from label1 to label2 with label4;
    }

    public void play(android.content.Context, android.net.Uri, boolean, int)
    {
        com.ophone.MiniPlayer.AsyncPlayer r0;
        android.content.Context r1;
        android.net.Uri r2;
        boolean z0;
        int i0;
        com.ophone.MiniPlayer.AsyncPlayer$Command r3;
        long $l1;
        java.util.LinkedList r4;
        java.lang.Throwable $r5, r6;

        r0 := @this: com.ophone.MiniPlayer.AsyncPlayer;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.net.Uri;
        z0 := @parameter2: boolean;
        i0 := @parameter3: int;
        r3 = new com.ophone.MiniPlayer.AsyncPlayer$Command;
        specialinvoke r3.<com.ophone.MiniPlayer.AsyncPlayer$Command: void <init>(com.ophone.MiniPlayer.AsyncPlayer$Command)>(null);
        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();
        r3.<com.ophone.MiniPlayer.AsyncPlayer$Command: long requestTime> = $l1;
        r3.<com.ophone.MiniPlayer.AsyncPlayer$Command: int code> = 1;
        r3.<com.ophone.MiniPlayer.AsyncPlayer$Command: android.content.Context context> = r1;
        r3.<com.ophone.MiniPlayer.AsyncPlayer$Command: android.net.Uri uri> = r2;
        r3.<com.ophone.MiniPlayer.AsyncPlayer$Command: boolean looping> = z0;
        r3.<com.ophone.MiniPlayer.AsyncPlayer$Command: int stream> = i0;
        r4 = r0.<com.ophone.MiniPlayer.AsyncPlayer: java.util.LinkedList mCmdQueue>;
        entermonitor r4;

     label0:
        specialinvoke r0.<com.ophone.MiniPlayer.AsyncPlayer: void enqueueLocked(com.ophone.MiniPlayer.AsyncPlayer$Command)>(r3);
        r0.<com.ophone.MiniPlayer.AsyncPlayer: int mState> = 1;
        exitmonitor r4;

     label1:
        return;

     label2:
        $r5 := @caughtexception;
        r6 = $r5;

     label3:
        exitmonitor r4;

     label4:
        throw r6;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void setUsesWakeLock(android.content.Context)
    {
        com.ophone.MiniPlayer.AsyncPlayer r0;
        android.content.Context r1;
        java.lang.StringBuilder $r2, $r7, $r8, $r10;
        android.os.PowerManager$WakeLock $r3, $r6, $r15;
        com.ophone.MiniPlayer.AsyncPlayer$Thread $r4, $r9;
        java.lang.RuntimeException $r5;
        java.lang.String $r11, $r14;
        java.lang.Object $r12;
        android.os.PowerManager $r13;

        r0 := @this: com.ophone.MiniPlayer.AsyncPlayer;
        r1 := @parameter0: android.content.Context;
        $r3 = r0.<com.ophone.MiniPlayer.AsyncPlayer: android.os.PowerManager$WakeLock mWakeLock>;
        if $r3 != null goto label0;

        $r4 = r0.<com.ophone.MiniPlayer.AsyncPlayer: com.ophone.MiniPlayer.AsyncPlayer$Thread mThread>;
        if $r4 == null goto label1;

     label0:
        $r5 = new java.lang.RuntimeException;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("assertion failed mWakeLock=");
        $r6 = r0.<com.ophone.MiniPlayer.AsyncPlayer: android.os.PowerManager$WakeLock mWakeLock>;
        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mThread=");
        $r9 = r0.<com.ophone.MiniPlayer.AsyncPlayer: com.ophone.MiniPlayer.AsyncPlayer$Thread mThread>;
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);
        throw $r5;

     label1:
        $r12 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");
        $r13 = (android.os.PowerManager) $r12;
        $r14 = r0.<com.ophone.MiniPlayer.AsyncPlayer: java.lang.String mTag>;
        $r15 = virtualinvoke $r13.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, $r14);
        r0.<com.ophone.MiniPlayer.AsyncPlayer: android.os.PowerManager$WakeLock mWakeLock> = $r15;
        return;
    }

    public void stop()
    {
        com.ophone.MiniPlayer.AsyncPlayer r0;
        java.util.LinkedList r1;
        com.ophone.MiniPlayer.AsyncPlayer$Command r2;
        int $i0;
        long $l1;
        java.lang.Throwable $r3, r4;

        r0 := @this: com.ophone.MiniPlayer.AsyncPlayer;
        r1 = r0.<com.ophone.MiniPlayer.AsyncPlayer: java.util.LinkedList mCmdQueue>;
        entermonitor r1;

     label0:
        $i0 = r0.<com.ophone.MiniPlayer.AsyncPlayer: int mState>;
        if $i0 == 2 goto label1;

        r2 = new com.ophone.MiniPlayer.AsyncPlayer$Command;
        specialinvoke r2.<com.ophone.MiniPlayer.AsyncPlayer$Command: void <init>(com.ophone.MiniPlayer.AsyncPlayer$Command)>(null);
        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();
        r2.<com.ophone.MiniPlayer.AsyncPlayer$Command: long requestTime> = $l1;
        r2.<com.ophone.MiniPlayer.AsyncPlayer$Command: int code> = 2;
        specialinvoke r0.<com.ophone.MiniPlayer.AsyncPlayer: void enqueueLocked(com.ophone.MiniPlayer.AsyncPlayer$Command)>(r2);
        r0.<com.ophone.MiniPlayer.AsyncPlayer: int mState> = 2;

     label1:
        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;
        r4 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r4;

        catch java.lang.Throwable from label0 to label1 with label3;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
