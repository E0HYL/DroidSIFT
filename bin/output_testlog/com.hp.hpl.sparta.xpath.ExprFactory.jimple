public class com.hp.hpl.sparta.xpath.ExprFactory extends java.lang.Object
{

    public void <init>()
    {
        com.hp.hpl.sparta.xpath.ExprFactory r0;

        r0 := @this: com.hp.hpl.sparta.xpath.ExprFactory;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    static com.hp.hpl.sparta.xpath.BooleanExpr createExpr(com.hp.hpl.sparta.xpath.XPath, com.hp.hpl.sparta.xpath.SimpleStreamTokenizer) throws com.hp.hpl.sparta.xpath.XPathException, java.io.IOException
    {
        com.hp.hpl.sparta.xpath.XPath r0;
        com.hp.hpl.sparta.xpath.SimpleStreamTokenizer r1;
        java.lang.String r2, r8, $r10, $r13, r18, $r20, r26, r30;
        int $i0, i1, $i3, $i4, $i6, $i7, $i10, $i11, i12, $i14, $i16, $i17, i18, $i20, $i22, $i24, $i25, $i27, $i28, $i29, $i31, $i32, $i35, $i37, $i38;
        com.hp.hpl.sparta.xpath.XPathException $r3, $r5, $r7, $r12, $r15, $r16, $r17, $r21, $r22, $r23, $r25, $r28, $r29;
        com.hp.hpl.sparta.xpath.PositionEqualsExpr $r4;
        com.hp.hpl.sparta.xpath.AttrExistsExpr $r6;
        com.hp.hpl.sparta.xpath.AttrEqualsExpr $r9;
        com.hp.hpl.sparta.xpath.AttrLessExpr $r11;
        com.hp.hpl.sparta.xpath.AttrGreaterExpr $r14;
        com.hp.hpl.sparta.xpath.AttrNotEqualsExpr $r19;
        boolean $z0;
        com.hp.hpl.sparta.xpath.TextExistsExpr $r24;
        com.hp.hpl.sparta.xpath.TextEqualsExpr $r27;
        com.hp.hpl.sparta.xpath.TextNotEqualsExpr $r31;

        r0 := @parameter0: com.hp.hpl.sparta.xpath.XPath;
        r1 := @parameter1: com.hp.hpl.sparta.xpath.SimpleStreamTokenizer;
        $i0 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;
        lookupswitch($i0)
        {
            case -3: goto label20;
            case -2: goto label1;
            case 64: goto label2;
            default: goto label0;
        };

     label0:
        $r3 = new com.hp.hpl.sparta.xpath.XPathException;
        specialinvoke $r3.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>(r0, "at beginning of expression", r1, "@, number, or text()");
        throw $r3;

     label1:
        i1 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nval>;
        virtualinvoke r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();
        $r4 = new com.hp.hpl.sparta.xpath.PositionEqualsExpr;
        specialinvoke $r4.<com.hp.hpl.sparta.xpath.PositionEqualsExpr: void <init>(int)>(i1);
        return $r4;

     label2:
        $i3 = virtualinvoke r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();
        if $i3 == -3 goto label3;

        $r5 = new com.hp.hpl.sparta.xpath.XPathException;
        specialinvoke $r5.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>(r0, "after @", r1, "name");
        throw $r5;

     label3:
        r2 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String sval>;
        $i4 = virtualinvoke r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();
        lookupswitch($i4)
        {
            case 33: goto label17;
            case 60: goto label7;
            case 61: goto label5;
            case 62: goto label12;
            default: goto label4;
        };

     label4:
        $r6 = new com.hp.hpl.sparta.xpath.AttrExistsExpr;
        specialinvoke $r6.<com.hp.hpl.sparta.xpath.AttrExistsExpr: void <init>(java.lang.String)>(r2);
        return $r6;

     label5:
        virtualinvoke r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();
        $i6 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;
        if $i6 == 34 goto label6;

        $i7 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;
        if $i7 == 39 goto label6;

        $r7 = new com.hp.hpl.sparta.xpath.XPathException;
        specialinvoke $r7.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>(r0, "right hand side of equals", r1, "quoted string");
        throw $r7;

     label6:
        r8 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String sval>;
        virtualinvoke r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();
        $r9 = new com.hp.hpl.sparta.xpath.AttrEqualsExpr;
        specialinvoke $r9.<com.hp.hpl.sparta.xpath.AttrEqualsExpr: void <init>(java.lang.String,java.lang.String)>(r2, r8);
        return $r9;

     label7:
        virtualinvoke r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();
        $i10 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;
        if $i10 == 34 goto label8;

        $i11 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;
        if $i11 != 39 goto label10;

     label8:
        $r10 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String sval>;
        i12 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);

     label9:
        virtualinvoke r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();
        $r11 = new com.hp.hpl.sparta.xpath.AttrLessExpr;
        specialinvoke $r11.<com.hp.hpl.sparta.xpath.AttrLessExpr: void <init>(java.lang.String,int)>(r2, i12);
        return $r11;

     label10:
        $i14 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;
        if $i14 != -2 goto label11;

        i12 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nval>;
        goto label9;

     label11:
        $r12 = new com.hp.hpl.sparta.xpath.XPathException;
        specialinvoke $r12.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>(r0, "right hand side of less-than", r1, "quoted string or number");
        throw $r12;

     label12:
        virtualinvoke r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();
        $i16 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;
        if $i16 == 34 goto label13;

        $i17 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;
        if $i17 != 39 goto label15;

     label13:
        $r13 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String sval>;
        i18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r13);

     label14:
        virtualinvoke r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();
        $r14 = new com.hp.hpl.sparta.xpath.AttrGreaterExpr;
        specialinvoke $r14.<com.hp.hpl.sparta.xpath.AttrGreaterExpr: void <init>(java.lang.String,int)>(r2, i18);
        return $r14;

     label15:
        $i20 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;
        if $i20 != -2 goto label16;

        i18 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nval>;
        goto label14;

     label16:
        $r15 = new com.hp.hpl.sparta.xpath.XPathException;
        specialinvoke $r15.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>(r0, "right hand side of greater-than", r1, "quoted string or number");
        throw $r15;

     label17:
        virtualinvoke r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();
        $i22 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;
        if $i22 == 61 goto label18;

        $r16 = new com.hp.hpl.sparta.xpath.XPathException;
        specialinvoke $r16.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>(r0, "after !", r1, "=");
        throw $r16;

     label18:
        virtualinvoke r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();
        $i24 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;
        if $i24 == 34 goto label19;

        $i25 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;
        if $i25 == 39 goto label19;

        $r17 = new com.hp.hpl.sparta.xpath.XPathException;
        specialinvoke $r17.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>(r0, "right hand side of !=", r1, "quoted string");
        throw $r17;

     label19:
        r18 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String sval>;
        virtualinvoke r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();
        $r19 = new com.hp.hpl.sparta.xpath.AttrNotEqualsExpr;
        specialinvoke $r19.<com.hp.hpl.sparta.xpath.AttrNotEqualsExpr: void <init>(java.lang.String,java.lang.String)>(r2, r18);
        return $r19;

     label20:
        $r20 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String sval>;
        $z0 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("text");
        if $z0 != 0 goto label21;

        $r21 = new com.hp.hpl.sparta.xpath.XPathException;
        specialinvoke $r21.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>(r0, "at beginning of expression", r1, "text()");
        throw $r21;

     label21:
        $i27 = virtualinvoke r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();
        if $i27 == 40 goto label22;

        $r22 = new com.hp.hpl.sparta.xpath.XPathException;
        specialinvoke $r22.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>(r0, "after text", r1, "(");
        throw $r22;

     label22:
        $i28 = virtualinvoke r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();
        if $i28 == 41 goto label23;

        $r23 = new com.hp.hpl.sparta.xpath.XPathException;
        specialinvoke $r23.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>(r0, "after text(", r1, ")");
        throw $r23;

     label23:
        $i29 = virtualinvoke r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();
        lookupswitch($i29)
        {
            case 33: goto label27;
            case 61: goto label25;
            default: goto label24;
        };

     label24:
        $r24 = <com.hp.hpl.sparta.xpath.TextExistsExpr: com.hp.hpl.sparta.xpath.TextExistsExpr INSTANCE>;
        return $r24;

     label25:
        virtualinvoke r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();
        $i31 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;
        if $i31 == 34 goto label26;

        $i32 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;
        if $i32 == 39 goto label26;

        $r25 = new com.hp.hpl.sparta.xpath.XPathException;
        specialinvoke $r25.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>(r0, "right hand side of equals", r1, "quoted string");
        throw $r25;

     label26:
        r26 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String sval>;
        virtualinvoke r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();
        $r27 = new com.hp.hpl.sparta.xpath.TextEqualsExpr;
        specialinvoke $r27.<com.hp.hpl.sparta.xpath.TextEqualsExpr: void <init>(java.lang.String)>(r26);
        return $r27;

     label27:
        virtualinvoke r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();
        $i35 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;
        if $i35 == 61 goto label28;

        $r28 = new com.hp.hpl.sparta.xpath.XPathException;
        specialinvoke $r28.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>(r0, "after !", r1, "=");
        throw $r28;

     label28:
        virtualinvoke r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();
        $i37 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;
        if $i37 == 34 goto label29;

        $i38 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;
        if $i38 == 39 goto label29;

        $r29 = new com.hp.hpl.sparta.xpath.XPathException;
        specialinvoke $r29.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>(r0, "right hand side of !=", r1, "quoted string");
        throw $r29;

     label29:
        r30 = r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String sval>;
        virtualinvoke r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();
        $r31 = new com.hp.hpl.sparta.xpath.TextNotEqualsExpr;
        specialinvoke $r31.<com.hp.hpl.sparta.xpath.TextNotEqualsExpr: void <init>(java.lang.String)>(r30);
        return $r31;
    }
}
