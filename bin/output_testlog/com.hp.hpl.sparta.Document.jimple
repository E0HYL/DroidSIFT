public class com.hp.hpl.sparta.Document extends com.hp.hpl.sparta.Node
{
    private static final boolean DEBUG;
    static final java.util.Enumeration EMPTY;
    private static final java.lang.Integer ONE;
    private final java.util.Hashtable indexible_;
    private com.hp.hpl.sparta.Sparta$Cache indices_;
    private java.util.Vector observers_;
    private com.hp.hpl.sparta.Element rootElement_;
    private java.lang.String systemId_;

    static void <clinit>()
    {
        java.lang.Integer $r0;
        com.hp.hpl.sparta.EmptyEnumeration $r1;

        $r0 = new java.lang.Integer;
        specialinvoke $r0.<java.lang.Integer: void <init>(int)>(1);
        <com.hp.hpl.sparta.Document: java.lang.Integer ONE> = $r0;
        $r1 = new com.hp.hpl.sparta.EmptyEnumeration;
        specialinvoke $r1.<com.hp.hpl.sparta.EmptyEnumeration: void <init>()>();
        <com.hp.hpl.sparta.Document: java.util.Enumeration EMPTY> = $r1;
        return;
    }

    public void <init>()
    {
        com.hp.hpl.sparta.Document r0;
        com.hp.hpl.sparta.Sparta$Cache $r1;
        java.util.Vector $r2;
        java.util.Hashtable $r3;

        r0 := @this: com.hp.hpl.sparta.Document;
        specialinvoke r0.<com.hp.hpl.sparta.Node: void <init>()>();
        r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_> = null;
        $r1 = staticinvoke <com.hp.hpl.sparta.Sparta: com.hp.hpl.sparta.Sparta$Cache newCache()>();
        r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Sparta$Cache indices_> = $r1;
        $r2 = new java.util.Vector;
        specialinvoke $r2.<java.util.Vector: void <init>()>();
        r0.<com.hp.hpl.sparta.Document: java.util.Vector observers_> = $r2;
        $r3 = (java.util.Hashtable) null;
        r0.<com.hp.hpl.sparta.Document: java.util.Hashtable indexible_> = $r3;
        r0.<com.hp.hpl.sparta.Document: java.lang.String systemId_> = "MEMORY";
        return;
    }

    void <init>(java.lang.String)
    {
        com.hp.hpl.sparta.Document r0;
        java.lang.String r1;
        com.hp.hpl.sparta.Sparta$Cache $r2;
        java.util.Vector $r3;
        java.util.Hashtable $r4;

        r0 := @this: com.hp.hpl.sparta.Document;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<com.hp.hpl.sparta.Node: void <init>()>();
        r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_> = null;
        $r2 = staticinvoke <com.hp.hpl.sparta.Sparta: com.hp.hpl.sparta.Sparta$Cache newCache()>();
        r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Sparta$Cache indices_> = $r2;
        $r3 = new java.util.Vector;
        specialinvoke $r3.<java.util.Vector: void <init>()>();
        r0.<com.hp.hpl.sparta.Document: java.util.Vector observers_> = $r3;
        $r4 = (java.util.Hashtable) null;
        r0.<com.hp.hpl.sparta.Document: java.util.Hashtable indexible_> = $r4;
        r0.<com.hp.hpl.sparta.Document: java.lang.String systemId_> = r1;
        return;
    }

    private com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String, boolean) throws com.hp.hpl.sparta.xpath.XPathException
    {
        com.hp.hpl.sparta.Document r0;
        java.lang.String r1, r5;
        boolean z0;
        char $c0;
        java.lang.StringBuffer $r2, $r3, $r4;
        com.hp.hpl.sparta.xpath.XPath $r6;
        com.hp.hpl.sparta.XPathVisitor $r7;

        r0 := @this: com.hp.hpl.sparta.Document;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);
        if $c0 == 47 goto label1;

        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);
        r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

     label0:
        $r6 = staticinvoke <com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(java.lang.String)>(r5);
        $r7 = virtualinvoke r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(com.hp.hpl.sparta.xpath.XPath,boolean)>($r6, z0);
        return $r7;

     label1:
        r5 = r1;
        goto label0;
    }

    public void addObserver(com.hp.hpl.sparta.Document$Observer)
    {
        com.hp.hpl.sparta.Document r0;
        com.hp.hpl.sparta.Document$Observer r1;
        java.util.Vector $r2;

        r0 := @this: com.hp.hpl.sparta.Document;
        r1 := @parameter0: com.hp.hpl.sparta.Document$Observer;
        $r2 = r0.<com.hp.hpl.sparta.Document: java.util.Vector observers_>;
        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>(r1);
        return;
    }

    public java.lang.Object clone()
    {
        com.hp.hpl.sparta.Document r0, r1;
        java.lang.String $r2;
        com.hp.hpl.sparta.Element $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: com.hp.hpl.sparta.Document;
        r1 = new com.hp.hpl.sparta.Document;
        $r2 = r0.<com.hp.hpl.sparta.Document: java.lang.String systemId_>;
        specialinvoke r1.<com.hp.hpl.sparta.Document: void <init>(java.lang.String)>($r2);
        $r3 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_>;
        $r4 = virtualinvoke $r3.<com.hp.hpl.sparta.Element: java.lang.Object clone()>();
        $r5 = (com.hp.hpl.sparta.Element) $r4;
        r1.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_> = $r5;
        return r1;
    }

    protected int computeHashCode()
    {
        com.hp.hpl.sparta.Document r0;
        com.hp.hpl.sparta.Element $r1;
        int $i0;

        r0 := @this: com.hp.hpl.sparta.Document;
        $r1 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_>;
        $i0 = virtualinvoke $r1.<com.hp.hpl.sparta.Node: int hashCode()>();
        return $i0;
    }

    public void deleteObserver(com.hp.hpl.sparta.Document$Observer)
    {
        com.hp.hpl.sparta.Document r0;
        com.hp.hpl.sparta.Document$Observer r1;
        java.util.Vector $r2;

        r0 := @this: com.hp.hpl.sparta.Document;
        r1 := @parameter0: com.hp.hpl.sparta.Document$Observer;
        $r2 = r0.<com.hp.hpl.sparta.Document: java.util.Vector observers_>;
        virtualinvoke $r2.<java.util.Vector: boolean removeElement(java.lang.Object)>(r1);
        return;
    }

    public boolean equals(java.lang.Object)
    {
        com.hp.hpl.sparta.Document r0, $r3;
        java.lang.Object r1;
        boolean $z0, $z1;
        com.hp.hpl.sparta.Element $r2, $r4;

        r0 := @this: com.hp.hpl.sparta.Document;
        r1 := @parameter0: java.lang.Object;
        if r0 != r1 goto label0;

        return 1;

     label0:
        $z0 = r1 instanceof com.hp.hpl.sparta.Document;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_>;
        $r3 = (com.hp.hpl.sparta.Document) r1;
        $r4 = $r3.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_>;
        $z1 = virtualinvoke $r2.<com.hp.hpl.sparta.Element: boolean equals(java.lang.Object)>($r4);
        return $z1;
    }

    public com.hp.hpl.sparta.Element getDocumentElement()
    {
        com.hp.hpl.sparta.Document r0;
        com.hp.hpl.sparta.Element $r1;

        r0 := @this: com.hp.hpl.sparta.Document;
        $r1 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_>;
        return $r1;
    }

    public java.lang.String getSystemId()
    {
        com.hp.hpl.sparta.Document r0;
        java.lang.String $r1;

        r0 := @this: com.hp.hpl.sparta.Document;
        $r1 = r0.<com.hp.hpl.sparta.Document: java.lang.String systemId_>;
        return $r1;
    }

    void monitor(com.hp.hpl.sparta.xpath.XPath) throws com.hp.hpl.sparta.xpath.XPathException
    {
        com.hp.hpl.sparta.Document r0;
        com.hp.hpl.sparta.xpath.XPath r1;

        r0 := @this: com.hp.hpl.sparta.Document;
        r1 := @parameter0: com.hp.hpl.sparta.xpath.XPath;
        return;
    }

    void notifyObservers()
    {
        com.hp.hpl.sparta.Document r0;
        java.util.Enumeration r1;
        java.util.Vector $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.hp.hpl.sparta.Document$Observer $r4;

        r0 := @this: com.hp.hpl.sparta.Document;
        $r2 = r0.<com.hp.hpl.sparta.Document: java.util.Vector observers_>;
        r1 = virtualinvoke $r2.<java.util.Vector: java.util.Enumeration elements()>();

     label0:
        $z0 = interfaceinvoke r1.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = interfaceinvoke r1.<java.util.Enumeration: java.lang.Object nextElement()>();
        $r4 = (com.hp.hpl.sparta.Document$Observer) $r3;
        interfaceinvoke $r4.<com.hp.hpl.sparta.Document$Observer: void update(com.hp.hpl.sparta.Document)>(r0);
        goto label0;
    }

    public void setDocumentElement(com.hp.hpl.sparta.Element)
    {
        com.hp.hpl.sparta.Document r0;
        com.hp.hpl.sparta.Element r1, $r2;

        r0 := @this: com.hp.hpl.sparta.Document;
        r1 := @parameter0: com.hp.hpl.sparta.Element;
        r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_> = r1;
        $r2 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_>;
        virtualinvoke $r2.<com.hp.hpl.sparta.Node: void setOwnerDocument(com.hp.hpl.sparta.Document)>(r0);
        virtualinvoke r0.<com.hp.hpl.sparta.Document: void notifyObservers()>();
        return;
    }

    public void setSystemId(java.lang.String)
    {
        com.hp.hpl.sparta.Document r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.sparta.Document;
        r1 := @parameter0: java.lang.String;
        r0.<com.hp.hpl.sparta.Document: java.lang.String systemId_> = r1;
        virtualinvoke r0.<com.hp.hpl.sparta.Document: void notifyObservers()>();
        return;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.sparta.Document r0;
        java.lang.String $r1;

        r0 := @this: com.hp.hpl.sparta.Document;
        $r1 = r0.<com.hp.hpl.sparta.Document: java.lang.String systemId_>;
        return $r1;
    }

    public void toString(java.io.Writer) throws java.io.IOException
    {
        com.hp.hpl.sparta.Document r0;
        java.io.Writer r1;
        com.hp.hpl.sparta.Element $r2;

        r0 := @this: com.hp.hpl.sparta.Document;
        r1 := @parameter0: java.io.Writer;
        $r2 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_>;
        virtualinvoke $r2.<com.hp.hpl.sparta.Element: void toString(java.io.Writer)>(r1);
        return;
    }

    public void toXml(java.io.Writer) throws java.io.IOException
    {
        com.hp.hpl.sparta.Document r0;
        java.io.Writer r1;
        com.hp.hpl.sparta.Element $r2;

        r0 := @this: com.hp.hpl.sparta.Document;
        r1 := @parameter0: java.io.Writer;
        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("<?xml version=\"1.0\" ?>\n");
        $r2 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_>;
        virtualinvoke $r2.<com.hp.hpl.sparta.Element: void toXml(java.io.Writer)>(r1);
        return;
    }

    com.hp.hpl.sparta.XPathVisitor visitor(com.hp.hpl.sparta.xpath.XPath, boolean) throws com.hp.hpl.sparta.xpath.XPathException
    {
        com.hp.hpl.sparta.Document r0;
        com.hp.hpl.sparta.xpath.XPath r1;
        boolean z0, $z1;
        java.lang.StringBuffer $r2, $r5, $r6, $r7, $r8;
        java.lang.String r3, $r9;
        com.hp.hpl.sparta.xpath.XPathException $r4;
        com.hp.hpl.sparta.XPathVisitor $r10;

        r0 := @this: com.hp.hpl.sparta.Document;
        r1 := @parameter0: com.hp.hpl.sparta.xpath.XPath;
        z0 := @parameter1: boolean;
        $z1 = virtualinvoke r1.<com.hp.hpl.sparta.xpath.XPath: boolean isStringValue()>();
        if $z1 == z0 goto label2;

        if z0 == 0 goto label1;

        r3 = "evaluates to element not string";

     label0:
        $r4 = new com.hp.hpl.sparta.xpath.XPathException;
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");
        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1);
        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" evaluates to ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);
        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r4.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String)>(r1, $r9);
        throw $r4;

     label1:
        r3 = "evaluates to string not element";
        goto label0;

     label2:
        $r10 = new com.hp.hpl.sparta.XPathVisitor;
        specialinvoke $r10.<com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.Document,com.hp.hpl.sparta.xpath.XPath)>(r0, r1);
        return $r10;
    }

    public boolean xpathEnsure(java.lang.String) throws com.hp.hpl.sparta.ParseException
    {
        com.hp.hpl.sparta.Document r0;
        java.lang.String r1, $r17, $r23, $r29, $r35;
        int i0, i1, $i2, $i3, $i4;
        com.hp.hpl.sparta.xpath.XPath r2, $r34;
        java.util.Enumeration r3, r5;
        com.hp.hpl.sparta.Element $r4, $r9, $r10, $r18, $r22, $r33;
        boolean $z0, z1;
        java.lang.Object $r6, $r12;
        com.hp.hpl.sparta.xpath.Step r7, $r13;
        com.hp.hpl.sparta.xpath.Step[] r8;
        java.lang.StringBuffer $r14, $r15, $r16, $r20, $r21, $r24, $r25, $r26, $r27, $r28;
        com.hp.hpl.sparta.ParseException $r19, $r32;
        com.hp.hpl.sparta.xpath.XPathException $r30, r31;

        r0 := @this: com.hp.hpl.sparta.Document;
        r1 := @parameter0: java.lang.String;
        i0 = 0;

     label0:
        $r4 = virtualinvoke r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String)>(r1);
        if $r4 == null goto label2;

     label1:
        return 0;

     label2:
        r2 = staticinvoke <com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(java.lang.String)>(r1);
        r3 = virtualinvoke r2.<com.hp.hpl.sparta.xpath.XPath: java.util.Enumeration getSteps()>();

     label3:
        i1 = 0;

     label4:
        $z0 = interfaceinvoke r3.<java.util.Enumeration: boolean hasMoreElements()>();
        if $z0 != 0 goto label8;

        r5 = virtualinvoke r2.<com.hp.hpl.sparta.xpath.XPath: java.util.Enumeration getSteps()>();
        $r6 = interfaceinvoke r5.<java.util.Enumeration: java.lang.Object nextElement()>();
        r7 = (com.hp.hpl.sparta.xpath.Step) $r6;
        $i2 = i1 - 1;
        r8 = newarray (com.hp.hpl.sparta.xpath.Step)[$i2];

     label5:
        $i3 = lengthof r8;
        if i0 < $i3 goto label10;

        $r9 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_>;
        if $r9 != null goto label12;

        $r10 = virtualinvoke r0.<com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Element makeMatching(com.hp.hpl.sparta.Element,com.hp.hpl.sparta.xpath.Step,java.lang.String)>(null, r7, r1);
        virtualinvoke r0.<com.hp.hpl.sparta.Document: void setDocumentElement(com.hp.hpl.sparta.Element)>($r10);

     label6:
        $i4 = lengthof r8;
        if $i4 != 0 goto label14;

     label7:
        return 1;

     label8:
        interfaceinvoke r3.<java.util.Enumeration: java.lang.Object nextElement()>();

     label9:
        i1 = i1 + 1;
        goto label4;

     label10:
        $r12 = interfaceinvoke r5.<java.util.Enumeration: java.lang.Object nextElement()>();
        $r13 = (com.hp.hpl.sparta.xpath.Step) $r12;
        r8[i0] = $r13;

     label11:
        i0 = i0 + 1;
        goto label5;

     label12:
        $r14 = new java.lang.StringBuffer;
        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();
        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");
        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r7);
        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();
        $r18 = virtualinvoke r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String)>($r17);
        if $r18 != null goto label6;

        $r19 = new com.hp.hpl.sparta.ParseException;
        $r20 = new java.lang.StringBuffer;
        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();
        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Existing root element <");
        $r22 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_>;
        $r23 = virtualinvoke $r22.<com.hp.hpl.sparta.Element: java.lang.String getTagName()>();
        $r24 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);
        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("...> does not match first step \"");
        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r7);
        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" of \"");
        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);
        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r19.<com.hp.hpl.sparta.ParseException: void <init>(java.lang.String)>($r29);
        throw $r19;

     label13:
        $r30 := @caughtexception;
        r31 = $r30;
        $r32 = new com.hp.hpl.sparta.ParseException;
        specialinvoke $r32.<com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r31);
        throw $r32;

     label14:
        $r33 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_>;
        $r34 = staticinvoke <com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(boolean,com.hp.hpl.sparta.xpath.Step[])>(0, r8);
        $r35 = virtualinvoke $r34.<com.hp.hpl.sparta.xpath.XPath: java.lang.String toString()>();
        z1 = virtualinvoke $r33.<com.hp.hpl.sparta.Element: boolean xpathEnsure(java.lang.String)>($r35);

     label15:
        return z1;

        catch com.hp.hpl.sparta.xpath.XPathException from label0 to label1 with label13;
        catch com.hp.hpl.sparta.xpath.XPathException from label2 to label3 with label13;
        catch com.hp.hpl.sparta.xpath.XPathException from label4 to label5 with label13;
        catch com.hp.hpl.sparta.xpath.XPathException from label5 to label6 with label13;
        catch com.hp.hpl.sparta.xpath.XPathException from label6 to label7 with label13;
        catch com.hp.hpl.sparta.xpath.XPathException from label8 to label9 with label13;
        catch com.hp.hpl.sparta.xpath.XPathException from label10 to label11 with label13;
        catch com.hp.hpl.sparta.xpath.XPathException from label12 to label13 with label13;
        catch com.hp.hpl.sparta.xpath.XPathException from label14 to label15 with label13;
    }

    public com.hp.hpl.sparta.Document$Index xpathGetIndex(java.lang.String) throws com.hp.hpl.sparta.ParseException
    {
        com.hp.hpl.sparta.Document r0;
        java.lang.String r1;
        com.hp.hpl.sparta.Document$Index r2, r5;
        com.hp.hpl.sparta.Sparta$Cache $r3, $r7;
        java.lang.Object $r4;
        com.hp.hpl.sparta.xpath.XPath $r6;
        com.hp.hpl.sparta.xpath.XPathException $r9, r10;
        com.hp.hpl.sparta.ParseException $r11;

        r0 := @this: com.hp.hpl.sparta.Document;
        r1 := @parameter0: java.lang.String;

     label0:
        $r3 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Sparta$Cache indices_>;
        $r4 = interfaceinvoke $r3.<com.hp.hpl.sparta.Sparta$Cache: java.lang.Object get(java.lang.Object)>(r1);
        r2 = (com.hp.hpl.sparta.Document$Index) $r4;

     label1:
        if r2 != null goto label4;

     label2:
        r5 = new com.hp.hpl.sparta.Document$Index;
        $r6 = staticinvoke <com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(java.lang.String)>(r1);
        specialinvoke r5.<com.hp.hpl.sparta.Document$Index: void <init>(com.hp.hpl.sparta.Document,com.hp.hpl.sparta.xpath.XPath)>(r0, $r6);
        $r7 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Sparta$Cache indices_>;
        interfaceinvoke $r7.<com.hp.hpl.sparta.Sparta$Cache: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r5);

     label3:
        r2 = r5;

     label4:
        return r2;

     label5:
        $r9 := @caughtexception;
        r10 = $r9;
        $r11 = new com.hp.hpl.sparta.ParseException;
        specialinvoke $r11.<com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)>("XPath problem", r10);
        throw $r11;

        catch com.hp.hpl.sparta.xpath.XPathException from label0 to label1 with label5;
        catch com.hp.hpl.sparta.xpath.XPathException from label2 to label3 with label5;
    }

    public boolean xpathHasIndex(java.lang.String)
    {
        com.hp.hpl.sparta.Document r0;
        java.lang.String r1;
        com.hp.hpl.sparta.Sparta$Cache $r2;
        java.lang.Object $r3;

        r0 := @this: com.hp.hpl.sparta.Document;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Sparta$Cache indices_>;
        $r3 = interfaceinvoke $r2.<com.hp.hpl.sparta.Sparta$Cache: java.lang.Object get(java.lang.Object)>(r1);
        if $r3 == null goto label0;

        return 1;

     label0:
        return 0;
    }

    public com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String) throws com.hp.hpl.sparta.ParseException
    {
        com.hp.hpl.sparta.Document r0;
        java.lang.String r1, r5;
        char $c0;
        java.lang.StringBuffer $r2, $r3, $r4;
        com.hp.hpl.sparta.xpath.XPath r6;
        com.hp.hpl.sparta.XPathVisitor $r7;
        com.hp.hpl.sparta.Element r8;
        com.hp.hpl.sparta.xpath.XPathException $r9, r10;
        com.hp.hpl.sparta.ParseException $r11;

        r0 := @this: com.hp.hpl.sparta.Document;
        r1 := @parameter0: java.lang.String;

     label0:
        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);
        if $c0 == 47 goto label4;

        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);
        r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        r6 = staticinvoke <com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(java.lang.String)>(r5);
        virtualinvoke r0.<com.hp.hpl.sparta.Document: void monitor(com.hp.hpl.sparta.xpath.XPath)>(r6);
        $r7 = virtualinvoke r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(com.hp.hpl.sparta.xpath.XPath,boolean)>(r6, 0);
        r8 = virtualinvoke $r7.<com.hp.hpl.sparta.XPathVisitor: com.hp.hpl.sparta.Element getFirstResultElement()>();

     label2:
        return r8;

     label3:
        $r9 := @caughtexception;
        r10 = $r9;
        $r11 = new com.hp.hpl.sparta.ParseException;
        specialinvoke $r11.<com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)>("XPath problem", r10);
        throw $r11;

     label4:
        r5 = r1;
        goto label1;

        catch com.hp.hpl.sparta.xpath.XPathException from label0 to label1 with label3;
        catch com.hp.hpl.sparta.xpath.XPathException from label1 to label2 with label3;
    }

    public java.util.Enumeration xpathSelectElements(java.lang.String) throws com.hp.hpl.sparta.ParseException
    {
        com.hp.hpl.sparta.Document r0;
        java.lang.String r1, r5;
        char $c0;
        java.lang.StringBuffer $r2, $r3, $r4;
        com.hp.hpl.sparta.xpath.XPath r6;
        com.hp.hpl.sparta.XPathVisitor $r7;
        java.util.Enumeration r8;
        com.hp.hpl.sparta.xpath.XPathException $r9, r10;
        com.hp.hpl.sparta.ParseException $r11;

        r0 := @this: com.hp.hpl.sparta.Document;
        r1 := @parameter0: java.lang.String;

     label0:
        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);
        if $c0 == 47 goto label4;

        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);
        r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        r6 = staticinvoke <com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(java.lang.String)>(r5);
        virtualinvoke r0.<com.hp.hpl.sparta.Document: void monitor(com.hp.hpl.sparta.xpath.XPath)>(r6);
        $r7 = virtualinvoke r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(com.hp.hpl.sparta.xpath.XPath,boolean)>(r6, 0);
        r8 = virtualinvoke $r7.<com.hp.hpl.sparta.XPathVisitor: java.util.Enumeration getResultEnumeration()>();

     label2:
        return r8;

     label3:
        $r9 := @caughtexception;
        r10 = $r9;
        $r11 = new com.hp.hpl.sparta.ParseException;
        specialinvoke $r11.<com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)>("XPath problem", r10);
        throw $r11;

     label4:
        r5 = r1;
        goto label1;

        catch com.hp.hpl.sparta.xpath.XPathException from label0 to label1 with label3;
        catch com.hp.hpl.sparta.xpath.XPathException from label1 to label2 with label3;
    }

    public java.lang.String xpathSelectString(java.lang.String) throws com.hp.hpl.sparta.ParseException
    {
        com.hp.hpl.sparta.Document r0;
        java.lang.String r1, r3;
        com.hp.hpl.sparta.XPathVisitor $r2;
        com.hp.hpl.sparta.xpath.XPathException $r4, r5;
        com.hp.hpl.sparta.ParseException $r6;

        r0 := @this: com.hp.hpl.sparta.Document;
        r1 := @parameter0: java.lang.String;

     label0:
        $r2 = specialinvoke r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean)>(r1, 1);
        r3 = virtualinvoke $r2.<com.hp.hpl.sparta.XPathVisitor: java.lang.String getFirstResultString()>();

     label1:
        return r3;

     label2:
        $r4 := @caughtexception;
        r5 = $r4;
        $r6 = new com.hp.hpl.sparta.ParseException;
        specialinvoke $r6.<com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)>("XPath problem", r5);
        throw $r6;

        catch com.hp.hpl.sparta.xpath.XPathException from label0 to label1 with label2;
    }

    public java.util.Enumeration xpathSelectStrings(java.lang.String) throws com.hp.hpl.sparta.ParseException
    {
        com.hp.hpl.sparta.Document r0;
        java.lang.String r1;
        com.hp.hpl.sparta.XPathVisitor $r2;
        java.util.Enumeration r3;
        com.hp.hpl.sparta.xpath.XPathException $r4, r5;
        com.hp.hpl.sparta.ParseException $r6;

        r0 := @this: com.hp.hpl.sparta.Document;
        r1 := @parameter0: java.lang.String;

     label0:
        $r2 = specialinvoke r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean)>(r1, 1);
        r3 = virtualinvoke $r2.<com.hp.hpl.sparta.XPathVisitor: java.util.Enumeration getResultEnumeration()>();

     label1:
        return r3;

     label2:
        $r4 := @caughtexception;
        r5 = $r4;
        $r6 = new com.hp.hpl.sparta.ParseException;
        specialinvoke $r6.<com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)>("XPath problem", r5);
        throw $r6;

        catch com.hp.hpl.sparta.xpath.XPathException from label0 to label1 with label2;
    }
}
